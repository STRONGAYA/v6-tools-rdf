name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10" ]
        vantage6-version: [ "4.11", "4.12" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock hypothesis faker psutil scipy
          pip install vantage6==${{ matrix.vantage6-version }}
          pip install -e .

      - name: Run tests
        run: |
          pytest

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black mypy
          pip install -e .

      - name: Run Black code formatter check
        run: |
          black --check --diff src/ tests/

      - name: Run Flake8 linter
        run: |
          flake8 src/ tests/ --max-line-length=120 --extend-ignore=E203,W503

      - name: Run MyPy type checker
        run: |
          mypy src/vantage6_strongaya_rdf/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install security scanning dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run Bandit security linter
        run: |
          bandit -r src/ -f json -o bandit-report.json || true

      - name: Check dependencies for known vulnerabilities
        run: |
          safety check --json --output safety-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
